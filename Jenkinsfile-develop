def COLOR_MAP = [
    'SUCCESS': 'good', 
    'FAILURE': 'danger',
]

///////////// Kubernetes /////////////////////////////
def ecrRepo="ordway-migration-repo"                                   //ECR repo Name
def ecrEndpoint = "897585983198.dkr.ecr.us-east-1.amazonaws.com"      //ECR endpoint
def region="us-east-1"             //Used for identigying EKS cluster region
def eksCluster = "us-eks-dev"    //EKS Cluster name
def newImage = ""

pipeline {
  agent{
      label 'slave3'
  }

  stages {

    stage('Slack Notification'){
      steps {
        script {
            env.GIT_AUTHOR = sh (script: "git --no-pager show -s --format='%an'", returnStdout: true).trim()
            env.GIT_AUTHOR_EMAIL = sh (script: "git --no-pager show -s --format='%ae'", returnStdout: true).trim()
            env.GIT_COMMIT_MSG = sh (script: "git log -1 --pretty=%B ${GIT_COMMIT}", returnStdout: true).trim()
        }
        slackSend channel: '#ops',
                  color: '#0000FF',
            message: "Build Started:\n Job Name: ${env.JOB_NAME}\n Build Number: ${env.BUILD_NUMBER}\n Git Branch: ${env.GIT_BRANCH}\n Git Commited by: ${env.GIT_AUTHOR}\n Git Author Email: ${env.GIT_AUTHOR_EMAIL}\n Git Commit Message: ${env.GIT_COMMIT_MSG}\n Git Commit ID: ${env.GIT_COMMIT}\n More info at: (<${env.BUILD_URL}|Open>)"
      }
    }

    stage ('Build, Dockerize and push to ECR') {
      agent{
        label 'slave3'
      }

      steps{
        script{
            newImage = "${ecrEndpoint}/${ecrRepo}:v0.${env.BUILD_ID}"
        }
        sh """
        whoami
        hostname
        aws --profile default ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${ecrEndpoint}/${ecrRepo}
        docker build -f Dockerfile -t ${newImage} .
        docker push ${newImage}
        docker images -q ${newImage} | xargs docker rmi
        rm -f version.txt
        """
      }
      post {
          // only triggered when blue or green sign
          success {
          slackSend channel: '#ops',
          color: COLOR_MAP[currentBuild.currentResult],
          message: "Docker image build was successfull for ${env.JOB_NAME} -- ${env.GIT_BRANCH} branch and image was pushed to ECR."
          }
          // triggered when red sign
          failure {
          slackSend channel: '#ops',
          color: COLOR_MAP[currentBuild.currentResult],
          message: "Docker image build failed for ${env.JOB_NAME} -- ${env.GIT_BRANCH} branch."
          }
          }
    }

    stage ('Kubernetes ConfigMap Customer Portal') {
      steps{
        sh """
        pwd
        ls -l
        aws eks --region ${region} update-kubeconfig --name ${eksCluster}
        aws s3 cp s3://infra-dev-store-ordwaylabs/ordway-migration/env_secrets/migration_local_env.yml .
        ls -l
        kubectl create cm portal-web-configmap-dev-${env.BUILD_ID} --from-file=migration_local_env.yml -n dev
        aws s3 cp migration_local_env.yml s3://infra-dev-store-ordwaylabs/ordway-migration/env_secrets/${env.BUILD_ID}/
        """
      }
    }

    stage('Checkout k8s files') {
      steps {
        dir('kubernets-files') {
          checkout([$class: 'GitSCM',
          branches: [[name: '*/master']],
          extensions: [[$class: 'CleanBeforeCheckout']],
          userRemoteConfigs: [[credentialsId: 'jenkins',
          url: 'git@github.com:ordwaylabs/ordway-deployment.git']]])
        }
      }
    }

    stage ('Commit to Git Repo') {
      steps {
        sh '''
        pwd
        cd $WORKSPACE/kubernets-files/
        ls -l 
        git config --global user.email "jenkins.dev@ordwaylabs.com"
        git config --global user.name "Jenkins Dev"
        git checkout master
        git pull origin master
        git branch

        # Updates the manifests files
        cd $WORKSPACE/kubernets-files/manifest-dev/

        cat k8s-ordway-migration-webdeploy-v1-template.yaml
        sed -i "s/v0.[0-9]*/v0.${BUILD_ID}/g" k8s-ordway-migration-webdeploy-v1-template.yaml
        sed -i "s|migration-web-configmap-dev.*|migration-web-configmap-dev-${BUILD_ID}|g" k8s-ordway-migration-webdeploy-v1-template.yaml

        cat k8s-ordway-migration-webdeploy-v1-template.yaml

        cd $WORKSPACE/kubernets-files/manifest-dev/
        git add .
        git commit -m "${env.JOB_NAME} ${BUILD_ID}"
        git push origin master
        kubectl apply -f k8s-ordway-migration-webdeploy-v1-template.yaml
        '''
      }
    }
  }

  // Post-build actions
  post {
    always {
      slackSend channel: '#ops',
        color: COLOR_MAP[currentBuild.currentResult],
        message: "*${currentBuild.currentResult}:*\n Job Name: ${env.JOB_NAME}\n Build Number: ${env.BUILD_NUMBER}\n Git Branch: ${env.GIT_BRANCH}\n Git commit ID: ${env.GIT_COMMIT}\n  More info at: (<${env.BUILD_URL}|Open>)"
    }
  }
}
